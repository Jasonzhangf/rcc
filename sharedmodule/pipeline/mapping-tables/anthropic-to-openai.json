{
  "version": "1.0.0",
  "description": "Anthropic to OpenAI protocol conversion",
  "protocols": {
    "input": "anthropic",
    "output": "openai"
  },
  "requestMappings": {
    "model": {
      "field": "model",
      "transform": "mapAnthropicModelToOpenAI"
    },
    "max_tokens": {
      "field": "max_tokens"
    },
    "messages": {
      "field": "messages",
      "transform": "convertAnthropicMessagesToOpenAI"
    },
    "temperature": {
      "field": "temperature"
    },
    "top_p": {
      "field": "top_p"
    },
    "stop_sequences": {
      "field": "stop",
      "transform": "convertStopSequences"
    },
    "stream": {
      "field": "stream"
    }
  },
  "responseMappings": {
    "content": {
      "field": "choices[0].message.content"
    },
    "role": {
      "field": "choices[0].message.role"
    },
    "usage.input_tokens": {
      "field": "usage.prompt_tokens"
    },
    "usage.output_tokens": {
      "field": "usage.completion_tokens"
    },
    "id": {
      "field": "id"
    },
    "type": {
      "field": "object",
      "defaultValue": "chat.completion"
    },
    "created": {
      "field": "created",
      "transform": "generateTimestamp"
    }
  },
  "validation": {
    "required": ["model", "messages"],
    "types": {
      "model": "string",
      "messages": "array",
      "max_tokens": "number",
      "temperature": "number",
      "top_p": "number"
    },
    "ranges": {
      "temperature": { "min": 0, "max": 2 },
      "top_p": { "min": 0, "max": 1 },
      "max_tokens": { "min": 1, "max": 200000 }
    }
  },
  "transformFunctions": {
    "mapAnthropicModelToOpenAI": {
      "type": "mapping",
      "mappings": {
        "claude-3-opus-20240229": "gpt-4",
        "claude-3-sonnet-20240229": "gpt-4-turbo",
        "claude-3-haiku-20240307": "gpt-3.5-turbo",
        "claude-2.1": "gpt-4",
        "claude-2.0": "gpt-4",
        "claude-instant-1.2": "gpt-3.5-turbo"
      },
      "defaultValue": "gpt-4"
    },
    "convertAnthropicMessagesToOpenAI": {
      "type": "array_transform",
      "elementTransform": {
        "role": {
          "mapping": {
            "user": "user",
            "assistant": "assistant"
          }
        },
        "content": {
          "field": "content"
        }
      }
    },
    "convertStopSequences": {
      "type": "transform",
      "operation": "arrayToString"
    },
    "generateTimestamp": {
      "type": "function",
      "function": "Math.floor(Date.now() / 1000)"
    }
  }
}